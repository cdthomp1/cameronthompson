{"version":3,"sources":["../src/index.js"],"names":["boxen","require","chalk","inquirer","clear","open","prompt","createPromptModule","questions","type","name","message","choices","green","bold","value","console","log","data","work","white","hex","blog","gray","whiteBright","twitter","cyan","github","linkedin","blue","web","npx","red","labelWork","labelBlog","labelTwitter","labelGitHub","labelLinkedIn","labelWeb","labelCard","me","italic","join","margin","float","padding","borderStyle","borderColor","tip","cyanBright","then","answer","action"],"mappings":"AAAA;;AAEA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEAG,KAAK;;AAEL,MAAME,MAAM,GAAGH,QAAQ,CAACI,kBAAT,EAAf;;AAEA,MAAMC,SAAS,GAAG;AACd;AACIC,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,IAAI,EAAE,QAFV;AAGIC,EAAAA,OAAO,EAAE,sBAHb;AAIIC,EAAAA,OAAO,EAAE;AACL;AACIF,IAAAA,IAAI,EAAG,cAAaR,KAAK,CAACW,KAAN,CAAYC,IAAZ,CAAiB,OAAjB,CAA0B,GADlD;AAEIC,IAAAA,KAAK,EAAE,MAAM;AACTV,MAAAA,IAAI,CAAC,6BAAD,CAAJ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KALL,EADK;;AAQL;AACIP,IAAAA,IAAI,EAAE,YADV;AAEIK,IAAAA,KAAK,EAAE,MAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAJL,EARK,CAJb,EADc,CAAlB;;;;;;AAuBA,MAAMC,IAAI,GAAG;AACTR,EAAAA,IAAI,EAAER,KAAK,CAACY,IAAN,CAAWD,KAAX,CAAiB,0BAAjB,CADG;AAETM,EAAAA,IAAI,EAAG,GAAEjB,KAAK,CAACkB,KAAN,CAAY,4BAAZ,CAA0C,IAAGlB,KAAK;AACtDmB,EAAAA,GADiD,CAC7C,SAD6C;AAEjDP,EAAAA,IAFiD,CAE5C,OAF4C,CAEnC,EAJV;AAKTQ,EAAAA,IAAI,EAAEpB,KAAK,CAACqB,IAAN,CAAW,iBAAX,IAAgCrB,KAAK,CAACsB,WAAN,CAAkB,UAAlB,CAL7B;AAMTC,EAAAA,OAAO,EAAEvB,KAAK,CAACqB,IAAN,CAAW,sBAAX,IAAqCrB,KAAK,CAACwB,IAAN,CAAW,cAAX,CANrC;AAOT;AACAC,EAAAA,MAAM,EAAEzB,KAAK,CAACqB,IAAN,CAAW,qBAAX,IAAoCrB,KAAK,CAACW,KAAN,CAAY,UAAZ,CARnC;AASTe,EAAAA,QAAQ,EAAE1B,KAAK,CAACqB,IAAN,CAAW,0BAAX,IAAyCrB,KAAK,CAAC2B,IAAN,CAAW,oBAAX,CAT1C;AAUTC,EAAAA,GAAG,EAAE5B,KAAK,CAACwB,IAAN,CAAW,4BAAX,CAVI;AAWTK,EAAAA,GAAG,EAAE7B,KAAK,CAAC8B,GAAN,CAAU,KAAV,IAAmB,GAAnB,GAAyB9B,KAAK,CAACkB,KAAN,CAAY,iBAAZ,CAXrB;;AAaTa,EAAAA,SAAS,EAAE/B,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAbF;AAcToB,EAAAA,SAAS,EAAEhC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAdF;AAeTqB,EAAAA,YAAY,EAAEjC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAfL;AAgBT;AACAsB,EAAAA,WAAW,EAAElC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAjBJ;AAkBTuB,EAAAA,aAAa,EAAEnC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAlBN;AAmBTwB,EAAAA,QAAQ,EAAEpC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CAnBD;AAoBTyB,EAAAA,SAAS,EAAErC,KAAK,CAACkB,KAAN,CAAYN,IAAZ,CAAiB,cAAjB,CApBF,EAAb;;;AAuBA,MAAM0B,EAAE,GAAGxC,KAAK;AACZ;AACK,GAAEkB,IAAI,CAACR,IAAK,EADjB;AAEK,EAFL;AAGK,GAAEQ,IAAI,CAACe,SAAU,KAAIf,IAAI,CAACC,IAAK,EAHpC;AAIK,GAAED,IAAI,CAACgB,SAAU,KAAIhB,IAAI,CAACI,IAAK,EAJpC;AAKK,GAAEJ,IAAI,CAACiB,YAAa,KAAIjB,IAAI,CAACO,OAAQ,EAL1C;AAMI;AACC,GAAEP,IAAI,CAACkB,WAAY,KAAIlB,IAAI,CAACS,MAAO,EAPxC;AAQK,GAAET,IAAI,CAACmB,aAAc,KAAInB,IAAI,CAACU,QAAS,EAR5C;AASK,GAAEV,IAAI,CAACoB,QAAS,KAAIpB,IAAI,CAACY,GAAI,EATlC;AAUK,EAVL;AAWK,GAAEZ,IAAI,CAACqB,SAAU,KAAIrB,IAAI,CAACa,GAAI,EAXnC;AAYK,EAZL;AAaK,GAAE7B,KAAK,CAACuC,MAAN;AACC,yDADD;AAED,EAfN;AAgBK,GAAEvC,KAAK,CAACuC,MAAN,CAAa,iDAAb,CAAgE,EAhBvE;AAiBK,GAAEvC,KAAK,CAACuC,MAAN,CAAa,4BAAb,CAA2C,EAjBlD;AAkBEC,IAlBF,CAkBO,IAlBP,CADY;AAoBZ;AACIC,EAAAA,MAAM,EAAE,CADZ;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,OAAO,EAAE,CAHb;AAIIC,EAAAA,WAAW,EAAE,QAJjB;AAKIC,EAAAA,WAAW,EAAE,OALjB,EApBY,CAAhB;;;;AA6BA/B,OAAO,CAACC,GAAR,CAAYuB,EAAZ;AACA,MAAMQ,GAAG,GAAG;AACP,YAAW9C,KAAK,CAAC+C,UAAN,CAAiBnC,IAAjB;AACR,kBADQ;AAEV,qBAHM;AAIR,EAJQ;AAKV4B,IALU,CAKL,IALK,CAAZ;AAMA1B,OAAO,CAACC,GAAR,CAAY+B,GAAZ;;;AAGA1C,MAAM,CAACE,SAAD,CAAN,CAAkB0C,IAAlB,CAAuBC,MAAM,IAAIA,MAAM,CAACC,MAAP,EAAjC","sourcesContent":["#!/usr/bin/env node\n\n\"use strict\";\n\nconst boxen = require(\"boxen\");\nconst chalk = require(\"chalk\");\nconst inquirer = require(\"inquirer\");\nconst clear = require(\"clear\");\nconst open = require(\"open\");\n\nclear();\n\nconst prompt = inquirer.createPromptModule();\n\nconst questions = [\n    {\n        type: \"list\",\n        name: \"action\",\n        message: \"What you want to do?\",\n        choices: [\n            {\n                name: `Send me an ${chalk.green.bold(\"email\")}?`,\n                value: () => {\n                    open(\"mailto:camthomp96@gmail.com\");\n                    console.log(\"\\nDone, see you soon.\\n\");\n                }\n            },\n            {\n                name: \"Just quit.\",\n                value: () => {\n                    console.log(\"Ok, bye.\\n\");\n                }\n            }\n        ]\n    }\n];\n\nconst data = {\n    name: chalk.bold.green(\"        Cameron Thompson\"),\n    work: `${chalk.white(\"Student Software Developer\")} ${chalk\n        .hex(\"#2b82b2\")\n        .bold(\"BYU-I\")}`,\n    blog: chalk.gray(\"https://dev.to/\") + chalk.whiteBright(\"cdthomp1\"),\n    twitter: chalk.gray(\"https://twitter.com/\") + chalk.cyan(\"DeveloperCam\"),\n    /* npm: chalk.gray(\"https://npmjs.com/\") + chalk.red(\"~ridermansb\"), */\n    github: chalk.gray(\"https://github.com/\") + chalk.green(\"cdthomp1\"),\n    linkedin: chalk.gray(\"https://linkedin.com/in/\") + chalk.blue(\"cameron-thompson96\"),\n    web: chalk.cyan(\"https://cameronthompson.io\"),\n    npx: chalk.red(\"npx\") + \" \" + chalk.white(\"cameronthompson\"),\n\n    labelWork: chalk.white.bold(\"       Work:\"),\n    labelBlog: chalk.white.bold(\"     Medium:\"),\n    labelTwitter: chalk.white.bold(\"    Twitter:\"),\n    /* labelnpm: chalk.white.bold(\"        npm:\"), */\n    labelGitHub: chalk.white.bold(\"     GitHub:\"),\n    labelLinkedIn: chalk.white.bold(\"   LinkedIn:\"),\n    labelWeb: chalk.white.bold(\"        Web:\"),\n    labelCard: chalk.white.bold(\"       Card:\")\n};\n\nconst me = boxen(\n    [\n        `${data.name}`,\n        ``,\n        `${data.labelWork}  ${data.work}`,\n        `${data.labelBlog}  ${data.blog}`,\n        `${data.labelTwitter}  ${data.twitter}`,\n        /* `${data.labelnpm}  ${data.npm}`, */\n        `${data.labelGitHub}  ${data.github}`,\n        `${data.labelLinkedIn}  ${data.linkedin}`,\n        `${data.labelWeb}  ${data.web}`,\n        ``,\n        `${data.labelCard}  ${data.npx}`,\n        ``,\n        `${chalk.italic(\n            \"I'm curious, enthusiastic and student most of the time.\"\n        )}`,\n        `${chalk.italic(\"The rest of the time I experiment with my code,\")}`,\n        `${chalk.italic(\"to bring my ideas to life.\")}`\n    ].join(\"\\n\"),\n    {\n        margin: 1,\n        float: 'center',\n        padding: 1,\n        borderStyle: \"single\",\n        borderColor: \"green\"\n    }\n);\n\nconsole.log(me);\nconst tip = [\n    `Tip: Try ${chalk.cyanBright.bold(\n        \"cmd/ctrl + click\"\n    )} on the links above`,\n    '',\n].join(\"\\n\");\nconsole.log(tip);\n\n\nprompt(questions).then(answer => answer.action());"],"file":"index.js"}